name: lobe-chat-database

services:
  postgresql:
    image: pgvector/pgvector:pg16
    container_name: lobe-postgres
    volumes:
      - ${PG_VOLUME}:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: always
    networks:
      - lobe-network
    ports:
      - "${PG_PORT}:5432"

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: lobe-minio
    volumes:
      - ${MINIO_VOLUME}/data:/etc/minio/data
      - ${MINIO_VOLUME}/config:/root/.minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: "${MINIO_CONSOLE_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${MINIO_CONSOLE_PORT}}"
      MINIO_API_CORS_ALLOW_ORIGIN: "${LOBE_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${LOBE_PORT}}"
    restart: always
    command: ["server", "--address", ":${MINIO_API_PORT}", "--console-address", ":${MINIO_CONSOLE_PORT}", "/etc/minio/data"]
    networks:
      - lobe-network
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"

  casdoor:
    image: casbin/casdoor:latest
    container_name: lobe-casdoor
    entrypoint: /bin/sh -c "./server --createDatabase=true"
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: true
      driverName: postgres
      dataSourceName: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=postgresql port=5432 sslmode=disable dbname=${CASDOOR_DB_NAME:-casdoor}"
      origin: "${CASDOOR_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${CASDOOR_PORT}}"
      runmode: dev
    restart: always
    networks:
      - lobe-network
    ports:
      - "${CASDOOR_PORT}:8000"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  lobe:
    image: lobehub/lobe-chat-database:latest
    container_name: lobe-chat
    volumes:
      - ${LOBE_VOLUME}:/app/data
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_started
      casdoor:
        condition: service_started
    
    environment:
      # 动态URL配置
      NEXTAUTH_URL: "${LOBE_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${LOBE_PORT}}"
      APP_URL: "${LOBE_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${LOBE_PORT}}"
      AUTH_URL: "${LOBE_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${LOBE_PORT}}/api/auth"
      
      # 认证配置
      NEXT_AUTH_SSO_PROVIDERS: casdoor
      NEXT_AUTH_SECRET: ${NEXT_AUTH_SECRET}
      KEY_VAULTS_SECRET: ${KEY_VAULTS_SECRET}
      
      # Casdoor集成
      AUTH_CASDOOR_ISSUER: "${CASDOOR_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${CASDOOR_PORT}}"
      AUTH_CASDOOR_ID: ${AUTH_CASDOOR_ID}
      AUTH_CASDOOR_SECRET: ${AUTH_CASDOOR_SECRET}
      
      # 数据库配置
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}"
      
      # MinIO存储配置(S3_ENDPOINT上传图片的链接)
      S3_ENDPOINT: "${MINIO_API_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${MINIO_API_PORT}}"
      S3_BUCKET: ${MINIO_LOBE_BUCKET}
      S3_PUBLIC_DOMAIN: "${MINIO_API_DOMAIN:-${LOCAL_PROTOCOL}://${LOCAL_IP}:${MINIO_API_PORT}}"
      S3_FORCE_PATH_STYLE: true
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_ENABLE_PATH_STYLE: 1
      
      # 性能优化
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_ANALYTICS_ENABLED: 0
      LLM_VISION_IMAGE_USE_BASE64: 1
    
    env_file:
      - .env
    restart: always
    networks:
      - lobe-network
    ports:
      - "${LOBE_PORT}:3210"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600    # 一小时执行一次
      # - WATCHTOWER_SCHEDULE=0 0 2 * * *  # 每天凌晨2点执行
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_DEBUG=true
      - TZ=Asia/Shanghai
    restart: always
    networks:
      - lobe-network

networks:
  lobe-network:
    driver: bridge